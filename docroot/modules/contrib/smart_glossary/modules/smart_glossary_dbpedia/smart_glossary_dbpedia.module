<?php

/**
 * @file
 * Smart Glossary DBPedia
 */
use Drupal\smart_glossary_dbpedia\SmartGlossaryDBpedia;

/**
 * Implements hook_smart_glossary_related_resource().
 */
function smart_glossary_dbpedia_smart_glossary_related_resource($glossary_store, $concept_uri, $selected_language) {
  /** @var \Drupal\semantic_connector\Api\SemanticConnectorSparqlApi $glossary_store */
  // Create DBPedia domain.
  $dbpedia_domain = 'dbpedia.org';
  if ($selected_language != 'en') {
    $dbpedia_domain = $selected_language . '.' . $dbpedia_domain;
  }

  // Create sparql query.
  $query = "
    PREFIX skos:<http://www.w3.org/2004/02/skos/core#>

    SELECT *
    WHERE {
      <$concept_uri> a skos:Concept.
      OPTIONAL {
        <$concept_uri> skos:exactMatch ?dbpediaExactMatch  FILTER(regex(str(?dbpediaExactMatch), '^http://$dbpedia_domain', 'i'))
      }
      OPTIONAL {
        <$concept_uri> skos:closeMatch ?dbpediaCloseMatch  FILTER(regex(str(?dbpediaCloseMatch), '^http://$dbpedia_domain', 'i'))
      }
    }";

  // Get the DBPedia URIs for given concept.
  try {
    $rows = $glossary_store->query($query);
  }
  catch (Exception $e) {
    \Drupal::logger('smart_glossary_dbpedia')->log(\Drupal\Core\Logger\RfcLogLevel::ERROR, 'Smart Glossary DBpedia: <pre>%errors</pre>', array('%errors' => $e->getMessage()));
    return array();
  }

  if ($rows->numRows() == 0) {
    return array();
  }

  $dbpedia_uris = array();
  foreach ($rows as $data) {
    if (isset($data->dbpediaExactMatch)) {
      $dbpedia_uris['exactMatch'][] = $data->dbpediaExactMatch->getUri();
    }
    if (isset($data->dbpediaCloseMatch)) {
      $dbpedia_uris['closeMatch'][] = $data->dbpediaCloseMatch->getUri();
    }
  }

  return SmartGlossaryDBpedia::getDBpediaContents($dbpedia_domain, $dbpedia_uris, $selected_language);
}